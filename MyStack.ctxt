#BlueJ class context
comment0.target=MyStack
comment0.text=\n\ I\ am\ implementing\ my\ linkedlist\ as\ a\ Stack\ \n\n\ @Abiola\ Gabriel\ Olofin\ \n
comment1.params=
comment1.target=MyStack()
comment2.params=a
comment2.target=MyStack(java.lang.Object)
comment3.params=
comment3.target=boolean\ empty()
comment3.text=\n\ In\ this\ method,\ it\ is\ checking\ if\ the\ stack\ is\ empty\ or\ not\n\ based\ on\ the\ size\ of\ the\ linkedlist\n\ that\ is\ being\ used\ to\ implement\ the\ stack\n\ \n\ @param\ -\ none\ \n
comment4.params=
comment4.target=java.lang.Object\ peek()
comment4.text=\n\ In\ this\ method,\ it\ is\ looking\ at\ the\ top\ element\ in\ the\ stack\ \n\ \n\ @param\ -\ none\n
comment5.params=
comment5.target=java.lang.Object\ pop()
comment5.text=\n\ In\ this\ method,\ it\ is\ removing\ elements\ from\ the\ stack\n\ starting\ from\ the\ top\n\ \n\ @param\ -\ none\ \n
comment6.params=item
comment6.target=java.lang.Object\ push(java.lang.Object)
comment6.text=\n\ This\ method\ adds\ an\ item\ to\ the\ top\ of\ the\ stack\n\ \n\ @param\ -\ an\ item\ which\ will\ first\ add\ a\ value\ to\ the\ head\ node\n\ if\ it\ does\ not\ have\ a\ value.\ Otherwise,\ it\ will\ add\ the\ item\n\ to\ the\ top\ of\ the\ stack\n\ \n\ @param\ -\ an\ item\ which\ is\ the\ value\ of\ the\ node\n
comment7.params=o
comment7.target=int\ search(java.lang.Object)
comment7.text=\n\ This\ method\ Returns\ the\ distance\ from\ the\ top\ of\ the\n\ stack\ of\ the\ occurrence\ that\ is\ nearest\ the\ top\ of\ the\ stack\n\ The\ topmost\ item\ is\ considered\ to\ be\ at\ distance\ 1;\ the\ next\ item\ is\ \n\ at\ distance\ 2;\ etc.\ \n\ \n\ @param\ -\ Object\ o\ which\ will\ the\ the\ value\ of\ the\ node\n\ we\ are\ searching\ for\n
comment8.params=
comment8.target=int\ size()
comment8.text=\n\ This\ method\ returns\ the\ size\ of\ the\ stack\n
comment9.params=
comment9.target=void\ print()
comment9.text=\n\ This\ method\ prints\ out\ the\ elements\ in\ the\ stack\ \n\ starting\ from\ the\ bottom\n
numComments=10
